// <auto-generated />
using System;
using GamerSellStore.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GamerSellStore.Persistence.Migrations
{
    [DbContext(typeof(GamerSellStoreDbContext))]
    partial class GamerSellStoreDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("GamerShop")
                .HasAnnotation("ProductVersion", "7.0.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GamerSellStore.Entities.Clasificacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)");

                    b.HasKey("Id");

                    b.ToTable("Clasificacion", "GamerShop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = true,
                            Nombre = "E"
                        },
                        new
                        {
                            Id = 2,
                            Estado = true,
                            Nombre = "E10+"
                        },
                        new
                        {
                            Id = 3,
                            Estado = true,
                            Nombre = "T"
                        },
                        new
                        {
                            Id = 4,
                            Estado = true,
                            Nombre = "M"
                        },
                        new
                        {
                            Id = 5,
                            Estado = true,
                            Nombre = "AO"
                        },
                        new
                        {
                            Id = 6,
                            Estado = true,
                            Nombre = "RP"
                        });
                });

            modelBuilder.Entity("GamerSellStore.Entities.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .IsUnicode(false)
                        .HasColumnType("varchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Sexo")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("Usuario")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Cliente", "GamerShop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Correo = "jperez@gmail.com",
                            Estado = true,
                            Nombre = "Juan Perez",
                            Pais = "ECU",
                            Sexo = "M",
                            Usuario = "jperez"
                        },
                        new
                        {
                            Id = 2,
                            Correo = "mpalermo@gmail.com",
                            Estado = true,
                            Nombre = "Martin Palermo",
                            Pais = "PER",
                            Sexo = "M",
                            Usuario = "mpalermo"
                        },
                        new
                        {
                            Id = 3,
                            Correo = "emartinez@gmail.com",
                            Estado = true,
                            Nombre = "Eduardo Martinez",
                            Pais = "PER",
                            Sexo = "M",
                            Usuario = "emartinez"
                        },
                        new
                        {
                            Id = 4,
                            Correo = "lquevedo@gmail.com",
                            Estado = true,
                            Nombre = "Lorena Quevedo",
                            Pais = "BOL",
                            Sexo = "F",
                            Usuario = "lquevedo"
                        },
                        new
                        {
                            Id = 5,
                            Correo = "jiriarte@gmail.com",
                            Estado = true,
                            Nombre = "Juan Iriarte",
                            Pais = "ARG",
                            Sexo = "M",
                            Usuario = "jiriarte"
                        },
                        new
                        {
                            Id = 6,
                            Correo = "msolano@gmail.com",
                            Estado = true,
                            Nombre = "Manuela Solano",
                            Pais = "BRA",
                            Sexo = "F",
                            Usuario = "msolano"
                        },
                        new
                        {
                            Id = 7,
                            Correo = "ipedraza@gmail.com",
                            Estado = true,
                            Nombre = "Iris Pedraza",
                            Pais = "PER",
                            Sexo = "F",
                            Usuario = "ipedraza"
                        },
                        new
                        {
                            Id = 8,
                            Correo = "lbernaechea@gmail.com",
                            Estado = true,
                            Nombre = "Luz Bernaechea",
                            Pais = "ARG",
                            Sexo = "F",
                            Usuario = "lbernaechea"
                        });
                });

            modelBuilder.Entity("GamerSellStore.Entities.Consola", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Consola", "GamerShop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = true,
                            Nombre = "ATARI"
                        },
                        new
                        {
                            Id = 2,
                            Estado = true,
                            Nombre = "NES"
                        },
                        new
                        {
                            Id = 3,
                            Estado = true,
                            Nombre = "MAME"
                        },
                        new
                        {
                            Id = 4,
                            Estado = true,
                            Nombre = "GENESIS"
                        },
                        new
                        {
                            Id = 5,
                            Estado = true,
                            Nombre = "SNES"
                        },
                        new
                        {
                            Id = 6,
                            Estado = true,
                            Nombre = "SEGA SATURN"
                        },
                        new
                        {
                            Id = 7,
                            Estado = true,
                            Nombre = "PS1"
                        },
                        new
                        {
                            Id = 8,
                            Estado = true,
                            Nombre = "PS2"
                        },
                        new
                        {
                            Id = 9,
                            Estado = true,
                            Nombre = "PS3"
                        },
                        new
                        {
                            Id = 10,
                            Estado = true,
                            Nombre = "PS4"
                        },
                        new
                        {
                            Id = 11,
                            Estado = true,
                            Nombre = "PS5"
                        },
                        new
                        {
                            Id = 12,
                            Estado = true,
                            Nombre = "PSP"
                        },
                        new
                        {
                            Id = 13,
                            Estado = true,
                            Nombre = "PSVita"
                        },
                        new
                        {
                            Id = 14,
                            Estado = true,
                            Nombre = "Xbox one"
                        },
                        new
                        {
                            Id = 15,
                            Estado = true,
                            Nombre = "Xbox 360"
                        },
                        new
                        {
                            Id = 16,
                            Estado = true,
                            Nombre = "Xbox Series X"
                        },
                        new
                        {
                            Id = 17,
                            Estado = true,
                            Nombre = "PC"
                        },
                        new
                        {
                            Id = 18,
                            Estado = true,
                            Nombre = "Arcade"
                        },
                        new
                        {
                            Id = 19,
                            Estado = true,
                            Nombre = "GBA"
                        },
                        new
                        {
                            Id = 20,
                            Estado = true,
                            Nombre = "GBA Advanced"
                        },
                        new
                        {
                            Id = 21,
                            Estado = true,
                            Nombre = "Nintendo Switch"
                        },
                        new
                        {
                            Id = 22,
                            Estado = true,
                            Nombre = "WII"
                        },
                        new
                        {
                            Id = 23,
                            Estado = true,
                            Nombre = "WIIU"
                        });
                });

            modelBuilder.Entity("GamerSellStore.Entities.Evaluacion", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("Resenia")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("TituloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("TituloId");

                    b.ToTable("Evaluacion", "GamerShop");
                });

            modelBuilder.Entity("GamerSellStore.Entities.Genero", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Genero", "GamerShop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = true,
                            Nombre = "Survival Horror"
                        },
                        new
                        {
                            Id = 2,
                            Estado = true,
                            Nombre = "RPG"
                        },
                        new
                        {
                            Id = 3,
                            Estado = true,
                            Nombre = "SCI-FI"
                        },
                        new
                        {
                            Id = 4,
                            Estado = true,
                            Nombre = "Shooter"
                        },
                        new
                        {
                            Id = 5,
                            Estado = true,
                            Nombre = "Aventura"
                        },
                        new
                        {
                            Id = 6,
                            Estado = true,
                            Nombre = "Fantasia"
                        },
                        new
                        {
                            Id = 7,
                            Estado = true,
                            Nombre = "Deporte"
                        },
                        new
                        {
                            Id = 8,
                            Estado = true,
                            Nombre = "Musical"
                        },
                        new
                        {
                            Id = 9,
                            Estado = true,
                            Nombre = "Automoviles"
                        },
                        new
                        {
                            Id = 10,
                            Estado = true,
                            Nombre = "Medieval"
                        });
                });

            modelBuilder.Entity("GamerSellStore.Entities.Info.EvaluacionInfo", b =>
                {
                    b.Property<int>("Calificacion")
                        .HasColumnType("int");

                    b.Property<int>("CantidadDisponible")
                        .HasColumnType("int");

                    b.Property<string>("Clasificacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cliente")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Consola")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Genero")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HoraStr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Resenia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable("EvaluacionInfo", "GamerShop");
                });

            modelBuilder.Entity("GamerSellStore.Entities.Info.ReservaInfo", b =>
                {
                    b.Property<double>("PromedioClasificacion")
                        .HasColumnType("float");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("TotalVentas")
                        .HasColumnType("float");

                    b.ToTable("ReservaInfo", "GamerShop");
                });

            modelBuilder.Entity("GamerSellStore.Entities.Publisher", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Pais")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("nvarchar(35)");

                    b.HasKey("Id");

                    b.ToTable("Publisher", "GamerShop");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Estado = true,
                            Nombre = "Microsoft Game Studios",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 2,
                            Estado = true,
                            Nombre = "RockStar Games",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 3,
                            Estado = true,
                            Nombre = "EA TM",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 4,
                            Estado = true,
                            Nombre = "SEGA",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 5,
                            Estado = true,
                            Nombre = "CAPCOM",
                            Pais = "JPN"
                        },
                        new
                        {
                            Id = 6,
                            Estado = true,
                            Nombre = "UBISOFT",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 7,
                            Estado = true,
                            Nombre = "Insomniac Games",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 8,
                            Estado = true,
                            Nombre = "Warner Bros Games",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 9,
                            Estado = true,
                            Nombre = "Sony Interactive Games",
                            Pais = "JPN"
                        },
                        new
                        {
                            Id = 10,
                            Estado = true,
                            Nombre = "THQ",
                            Pais = "AUT"
                        },
                        new
                        {
                            Id = 11,
                            Estado = true,
                            Nombre = "Blizzard Entertaiment",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 12,
                            Estado = true,
                            Nombre = "Telltale Games",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 13,
                            Estado = true,
                            Nombre = "SquareEnix",
                            Pais = "JPN"
                        },
                        new
                        {
                            Id = 14,
                            Estado = true,
                            Nombre = "Nintendo",
                            Pais = "JPN"
                        },
                        new
                        {
                            Id = 15,
                            Estado = true,
                            Nombre = "Machine Zone",
                            Pais = "USA"
                        },
                        new
                        {
                            Id = 16,
                            Estado = true,
                            Nombre = "EIDOS Interactive Ltd.",
                            Pais = "UK"
                        },
                        new
                        {
                            Id = 17,
                            Estado = true,
                            Nombre = "Bethesda Softwork",
                            Pais = "CHN"
                        },
                        new
                        {
                            Id = 18,
                            Estado = true,
                            Nombre = "Konami",
                            Pais = "JPN"
                        },
                        new
                        {
                            Id = 19,
                            Estado = true,
                            Nombre = "Santa Monica Studio",
                            Pais = "USA"
                        });
                });

            modelBuilder.Entity("GamerSellStore.Entities.Reserva", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("FechaTxn")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<double>("ImporteTotal")
                        .HasColumnType("float");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NroTxn")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)");

                    b.Property<double>("PrecioUnitario")
                        .HasColumnType("float");

                    b.Property<int>("TituloId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("NroTxn");

                    b.HasIndex("TituloId");

                    b.ToTable("Reserva", "GamerShop");
                });

            modelBuilder.Entity("GamerSellStore.Entities.Titulo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Agotado")
                        .HasColumnType("int");

                    b.Property<int>("AnioPublicacion")
                        .HasColumnType("int");

                    b.Property<int>("ClasificacionId")
                        .HasColumnType("int");

                    b.Property<int>("ConsolaId")
                        .HasColumnType("int");

                    b.Property<double>("Costo")
                        .HasColumnType("float");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<int>("GeneroId")
                        .HasColumnType("int");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(500)
                        .IsUnicode(false)
                        .HasColumnType("varchar(500)");

                    b.Property<string>("Moneda")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<int>("PublisherId")
                        .HasColumnType("int");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClasificacionId");

                    b.HasIndex("ConsolaId");

                    b.HasIndex("GeneroId");

                    b.HasIndex("Nombre");

                    b.HasIndex("PublisherId");

                    b.ToTable("Titulo", "GamerShop");
                });

            modelBuilder.Entity("GamerSellStore.Persistence.GamerSellStoreUserIdentity", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentNumber")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<short>("DocumentType")
                        .HasColumnType("smallint");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Usuario", "GamerShop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Rol", "GamerShop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", "GamerShop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", "GamerShop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", "GamerShop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("UsuarioRol", "GamerShop");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", "GamerShop");
                });

            modelBuilder.Entity("GamerSellStore.Entities.Evaluacion", b =>
                {
                    b.HasOne("GamerSellStore.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamerSellStore.Entities.Titulo", "Titulo")
                        .WithMany()
                        .HasForeignKey("TituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Titulo");
                });

            modelBuilder.Entity("GamerSellStore.Entities.Reserva", b =>
                {
                    b.HasOne("GamerSellStore.Entities.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamerSellStore.Entities.Titulo", "Titulo")
                        .WithMany()
                        .HasForeignKey("TituloId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cliente");

                    b.Navigation("Titulo");
                });

            modelBuilder.Entity("GamerSellStore.Entities.Titulo", b =>
                {
                    b.HasOne("GamerSellStore.Entities.Clasificacion", "Clasificacion")
                        .WithMany()
                        .HasForeignKey("ClasificacionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamerSellStore.Entities.Consola", "Consola")
                        .WithMany()
                        .HasForeignKey("ConsolaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamerSellStore.Entities.Genero", "Genero")
                        .WithMany()
                        .HasForeignKey("GeneroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamerSellStore.Entities.Publisher", "Publisher")
                        .WithMany()
                        .HasForeignKey("PublisherId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Clasificacion");

                    b.Navigation("Consola");

                    b.Navigation("Genero");

                    b.Navigation("Publisher");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GamerSellStore.Persistence.GamerSellStoreUserIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GamerSellStore.Persistence.GamerSellStoreUserIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GamerSellStore.Persistence.GamerSellStoreUserIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GamerSellStore.Persistence.GamerSellStoreUserIdentity", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
